<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>推箱子游戏</title>
      <link href="/2019/02/21/%E6%8E%A8%E7%AE%B1%E5%AD%90%E6%B8%B8%E6%88%8F/"/>
      <url>/2019/02/21/%E6%8E%A8%E7%AE%B1%E5%AD%90%E6%B8%B8%E6%88%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="推箱子小游戏"><a href="#推箱子小游戏" class="headerlink" title="推箱子小游戏"></a>推箱子小游戏</h2><p>用python代码写的一个推箱子小游戏，有喜欢的可以玩一下。</p><p>代码如下：</p><p># 用二维数组表示地图</p><p># X 代表箱子，o 代表小人</p><p>map = [</p><p>​    “<strong><strong>**</strong></strong>“,</p><p>​    “<em>  <em>**</em>  </em>“,</p><p>​    “<em> X<em>**</em>  </em>“,</p><p>​    “<em> o      </em>“,</p><p>​    “<strong>**</strong>   *”,</p><p>​    “<em>  <em>**</em>  </em>“,</p><p>​    “<em>        </em>“,</p><p>​    “*   <strong>**</strong>“,</p><p>​    “*         “,</p><p>​    “<strong><strong>**</strong></strong>“</p><p>]</p><p># 创建变量step，用于存储已走步数</p><p># step = 0</p><p># 记录小人的初始坐标</p><p>global currentPersonRow,currentPersonCol</p><p>currentPersonRow = 3</p><p>currentPersonCol = 2</p><p># 显示地图的方法</p><p>def showMap():</p><p>​    for m in map:</p><p>​        print(m)</p><p># 接收用户输入的方向的函数</p><p>def enterDirection():</p><p>​    dir = input(‘请输入小人移动的方向 w:上 s:下 a:左 d:右 \n’)</p><p>​    return dir</p><p># 用于移动小人和箱子</p><p># 这个方法需要改变</p><p>def move(dir):</p><p>​    # 创建变量记录小人的下一个坐标</p><p>​    nextPersonRow = 0</p><p>​    nextPersonCol = 0</p><p>​    # 获取下一个位置坐标</p><p>​    # 调用getNextPoisiton()函数计算下一个坐标  </p><p>​    global currentPersonRow,currentPersonCol</p><p>​    # print(‘这’)</p><p>​    # print(currentPersonRow,currentPersonCol,nextPersonRow,nextPersonCol)</p><p>​    position = getNextPosition(dir,currentPersonRow,currentPersonCol,nextPersonRow,nextPersonCol)</p><p>​    print(‘第一次:’,position)</p><p>​    # print(position) -&gt; [nextPersonRow,nextPersonCol,currentPersonRow,currentPersonCol]</p><p>​    currentPersonRow = position[2]</p><p>​    currentPersonCol = position[3]</p><p>​    nextPersonRow = position[0]</p><p>​    nextPersonCol = position[1]</p><p>​    # 判断下一个位置是什么 *是墙壁，X是箱子，空格代表通道</p><p>​    if map[nextPersonRow][nextPersonCol] == ‘ ‘:</p><p>​        # 代表下一个位置是通道，可以移动</p><p>​        # map[currentPersonRow][currentPersonCol] = ‘ ‘</p><p>​        # map[nextPersonRow][nextPersonCol] = ‘o’</p><p>​        # 调用改变地图方法</p><p>​        chmap(currentPersonRow,currentPersonCol,map,’ ‘)</p><p>​        chmap(nextPersonRow,nextPersonCol,map,’o’)</p><p>​        # 改变小人当前位置</p><p>​        currentPersonRow = nextPersonRow</p><p>​        currentPersonCol = nextPersonCol</p><p>​        # step+=1     #步数+1</p><p>​    elif map[nextPersonRow][nextPersonCol] == ‘X’:</p><p>​        # 此时下一个位置是箱子，还需要再次判断下一个位置</p><p>​        nextBoxRow = 0</p><p>​        nextBoxCol = 0</p><p>​        #　调用getNextPosition()计算箱子的下一个位置</p><p>​        position = getNextPosition(dir,nextPersonRow,nextPersonCol,nextBoxRow,nextBoxCol)</p><p>​        print(‘第二次:’,position)</p><p>​        nextBoxRow = position[0]</p><p>​        nextBoxCol = position[1]</p><p>​        nextPersonRow = position[2]</p><p>​        nextPersonCol = position[3]</p><p>​        if map[nextBoxRow][nextBoxCol] == ‘ ‘:</p><p>​            # 代表下一个位置是路，可以移动</p><p>​            # map[nextBoxRow][nextBoxCol] = ‘X’</p><p>​            # map[nextPersonRow][nextPersonCol] = ‘o’</p><p>​            # map[currentPersonRow][currentPersonCol] = ‘ ‘</p><p>​            chmap(nextBoxRow,nextBoxCol,map,’X’)</p><p>​            chmap(nextPersonRow,nextPersonCol,map,’o’)</p><p>​            chmap(currentPersonRow,currentPersonCol,map,’ ‘)</p><p>​            </p><p>​            # step+=1         #步数+1</p><p>​            # 记录当前小人的位置</p><p>​            currentPersonRow = nextPersonRow</p><p>​            currentPersonCol = nextPersonCol</p><p>​        # 遇到墙壁的情况不做处理</p><p># 获取下一个位置的方法</p><p># 需要五个参数</p><p># 1.移动的方向</p><p># 2.当前行</p><p># 3.当前列</p><p># 4.下一个行位置</p><p># 5.下一个列位置</p><p>def getNextPosition(dir,currentPersonRow,currentPersonCol,nextPersonRow,nextPersonCol):</p><p>​    # 创建一个数组，存储行列位置，并返回</p><p>​    position = []</p><p>​    if dir == ‘a’ or dir == ‘A’:</p><p>​        # 向左移一个单位</p><p>​        nextPersonRow = currentPersonRow</p><p>​        nextPersonCol = currentPersonCol - 1</p><p>​    elif dir == ‘d’ or dir == ‘D’:</p><p>​        # 向右移一个单位</p><p>​        nextPersonRow = currentPersonRow</p><p>​        nextPersonCol = currentPersonCol + 1</p><p>​    elif dir == ‘w’ or dir == ‘W’:</p><p>​        # 向上移一个单位</p><p>​        nextPersonRow = currentPersonRow - 1</p><p>​        nextPersonCol = currentPersonCol</p><p>​    elif dir == ‘s’ or dir == ‘S’:</p><p>​        #　向下移一个单位</p><p>​        nextPersonRow = currentPersonRow + 1</p><p>​        nextPersonCol = currentPersonCol</p><p>​    # else:</p><p>​    #     print(‘请输入正确的方向’)</p><p>​    position.append(nextPersonRow)          </p><p>​    position.append(nextPersonCol)          </p><p>​    position.append(currentPersonRow)       </p><p>​    position.append(currentPersonCol)</p><p>​    return position</p><p># 改变地图的参数，传入x,y为更改的坐标,map为数组，也就是地图,target是目标图形</p><p>def chmap(x,y,map,target):</p><p>​    s = map[x]</p><p>​    l = list(s)</p><p>​    l[y] = target</p><p>​    new_s = ‘’.join(l)</p><p>​    map[x] = new_s</p><p>while True:</p><p>​    showMap()</p><p>​    # 每次都判断是否过关</p><p>​    if map[8][9] == ‘X’:</p><p>​        # print(“恭喜您过关了，您一共走了%d步” %step)</p><p>​        print(‘You are win!’)</p><p>​        break</p><p>​    </p><p>​    # 调用enterDirection()获取用户输入的方向并复制给dir</p><p>​    dir = enterDirection()</p><p>​    print(“你输入的方向是：%c \n” %dir)</p><p>​    if dir == ‘q’ or dir == ‘Q’:</p><p>​        print(‘游戏退出’)</p><p>​        break</p><p>​    move(dir)</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记</title>
      <link href="/2019/02/21/%E6%97%A5%E8%AE%B0/"/>
      <url>/2019/02/21/%E6%97%A5%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="日记"><a href="#日记" class="headerlink" title="日记"></a>日记</h2><p>大V较多快深V偶尔喝IE佛IE和缩放</p>]]></content>
      
      
      <categories>
          
          <category> 私密 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pip用法、venv、虚拟环境（Windows环境）</title>
      <link href="/2019/02/21/pip%E7%94%A8%E6%B3%95%E3%80%81venv%E3%80%81%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%EF%BC%88Windows%E7%8E%AF%E5%A2%83%EF%BC%89/"/>
      <url>/2019/02/21/pip%E7%94%A8%E6%B3%95%E3%80%81venv%E3%80%81%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%EF%BC%88Windows%E7%8E%AF%E5%A2%83%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="pip"><a href="#pip" class="headerlink" title="pip"></a><strong>pip</strong></h2><p>pip:python install package,python三方包管理工具。安装python解释器时已自带。目录已添加到环境变量中。</p><p>包管理工具：包是别人写好的代码。经常有这种情况，比如爬虫框架功能的A包，里面引用了负责解析页面的B包，B包引用了更加基础底层的C包。包关系成树状引用。B包依赖C包。直接使用A包，运行报错缺少B包，缺少依赖包。</p><p>为了解决依赖包问题，包管理工具出现，主要功能：管理、下载、上传包。解决依赖，安装一个包时会把相关的依赖包都安装好。</p><p>pypi: <a href="https://pypi.org/" target="_blank" rel="noopener">https://pypi.org/</a> 是查找、安装、发布python包的一个平台。pip工具默认从pypi下载包。</p><h2 id="pip命令"><a href="#pip命令" class="headerlink" title="pip命令"></a><strong>pip命令</strong></h2><ol><li>在cmd命令窗口<br>1&gt; .  输入python，查看python安装的版本信息;<br>2&gt; . 输入exit（）退出；<br>3&gt; . 输入pip，查看pip的使用以及介绍，界面如图；<br><img src="https://i.loli.net/2019/01/10/5c37599c1cf9d.png" alt> </li><li>在cmd命令窗口， 输入pip list命令，输出安装过的三方包的列表。pip工具本身就是一个包，界面如图；<br><img src="https://img-blog.csdn.net/20181025130259281?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMzk5Nzg3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="pip  list"></li><li>在cmd命令窗口，输入pip search 关键字命令 ， 搜索包含关键字的包名，界面如图；<br><img src="https://img-blog.csdn.net/20181025130320533?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMzk5Nzg3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="pip  search  包名"></li><li>.在cmd命令窗口，输入pip install 包名命令，用来安装包。安装包的本质是从pypi下载，解压复制到C:\Python36\Lib\site-packages 下。默认安装包的最新版本。界面如图；<br><img src="https://img-blog.csdn.net/20181025130342953?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMzk5Nzg3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="pip install 包名"></li><li>在cmd命令窗口，输入pip uninstall 包名命令，   用来 卸载安装包，界面如图；<br><img src="https://img-blog.csdn.net/20181025130412400?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMzk5Nzg3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="pip uninstall 包名"></li><li>在cmd命令窗口， 输入pip install requests==2.19.0 ，用来安装指定版本的包，界面如图；<br><img src="https://img-blog.csdn.net/20181025130428589?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMzk5Nzg3/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="pip install requests==2.19.0"></li></ol><h2 id="批量备份和安装"><a href="#批量备份和安装" class="headerlink" title="批量备份和安装"></a><strong>批量备份和安装</strong></h2><ol><li>在cmd命令窗口， 输入命令  pip freeze &gt; requirement.txt，将解释器中的包和版本导出到一个文件中。界面如图；<br><img src="https://img-blog.csdnimg.cn/20181025205647810.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMzk5Nzg3,size_27,color_FFFFFF,t_70" alt="pip freeze &gt; requirement.txt"><br>执行成功以后在解释器中会多出一个名为requirement.txt的文件，界面如图；<br><img src="https://img-blog.csdnimg.cn/20181025210152828.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMzk5Nzg3,size_27,color_FFFFFF,t_70" alt="requirement.txt"><br>在此文件夹会出现一些包，这些都是你的计算机安装的一些包。</li><li>在cmd命令窗口， 输入命令pip install requirement.txt ，根据requirement.txt的信息批量安装对应版本的包，此命令需要把之前安装过的包卸载一些或者是在一台新的计算机中输入会显示，在此就不演示了，抱歉。</li></ol><h2 id="pip安装速度慢的问题"><a href="#pip安装速度慢的问题" class="headerlink" title="pip安装速度慢的问题"></a><strong>pip安装速度慢的问题</strong></h2><p>因为服务器在国外。为了改善这个问题，国内一些厂商或大学做了pypi网站的镜像。<br>国内的镜像站豆瓣源、网易源、清华源等。</p><p>常用国内源：<br>豆瓣：<a href="http://pypi.douban.com/simple/" target="_blank" rel="noopener">http://pypi.douban.com/simple/</a><br>清华：<a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple</a></p><p>临时使用：输入pip install -i <a href="http://pypi.douban.com/simple/pillow" target="_blank" rel="noopener">http://pypi.douban.com/simple/pillow</a><br>永久修改（推荐）：在C:/Users/用户名 下，新建pip文件夹，pip文件夹下新建pip.ini文件，在pip.ini文件写入下面两行代码即可；<br>[global]<br>index-url = <a href="https://pypi.douban.com/simple/" target="_blank" rel="noopener">https://pypi.douban.com/simple/</a> </p><h2 id="虚拟环境"><a href="#虚拟环境" class="headerlink" title="虚拟环境"></a><strong>虚拟环境</strong></h2><h3 id="python虚拟解释器环境"><a href="#python虚拟解释器环境" class="headerlink" title="python虚拟解释器环境"></a>python虚拟解释器环境</h3><p>公司不同时期的多个开发项目，使用的python大版本和各个包的版本不尽相同。<br>每个项目要求有一套让自己成功运行的解释器。一个程序员可能同时开发多个项目。电脑上需要有多套python解释器跟项目一一对应。</p><p>我们电脑现在只有一套python解释器，已它基础，虚拟出几个解释器的备份。<br>老的教材中要先安装virtualenv (虚拟environment环境)，因为使用较多，所以py3.4起官方直接内置了venv包。</p><ol><li>在cmd命令窗口， 输入命令python -m venv 虚拟环境名  ，创建虚拟环境，界面如图；<br><img src="https://img-blog.csdnimg.cn/20181025212545902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMzk5Nzg3,size_27,color_FFFFFF,t_70" alt="创建虚拟环境"><br>创建完发现虚拟环境具备python.exe ， pip.exe  ， active.bat,Lib库中除了pip包是空的，就好像刚重装完电脑系统。<br><img src="https://img-blog.csdnimg.cn/20181025213305305.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMzk5Nzg3,size_27,color_FFFFFF,t_70" alt="创建的文件夹"></li><li>在cmd命令窗口， 输入命令cd 虚拟环境名/Scripts，进入名为Scripts的文件夹<br><img src="https://img-blog.csdnimg.cn/20181025213801584.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMzk5Nzg3,size_27,color_FFFFFF,t_70" alt="切换文件夹"></li><li>在cmd命令窗口， 输入命令activate.bat ，激活虚拟环境<br><img src="https://img-blog.csdnimg.cn/20181025214145737.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMzk5Nzg3,size_27,color_FFFFFF,t_70" alt="activate.bat"><br>激活之后，界面如图；<br><img src="https://img-blog.csdnimg.cn/20181025214402176.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMzk5Nzg3,size_27,color_FFFFFF,t_70" alt="激活界面"></li><li>激活虚拟环境后可以pip install跟项目配合的包，python app.py。如果有多个项目，就生成多个虚拟环境一一搭配。好处，实现了项目环境隔离。</li></ol><p>还有不足之处，请多指教，欢迎在下方留言评论，谢谢！</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django框架</title>
      <link href="/2019/02/21/Django%E6%A1%86%E6%9E%B6/"/>
      <url>/2019/02/21/Django%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="python开发web项目"><a href="#python开发web项目" class="headerlink" title="python开发web项目"></a>python开发web项目</h2><h2 id="django"><a href="#django" class="headerlink" title="django"></a>django</h2><h3 id="django安装"><a href="#django安装" class="headerlink" title="django安装"></a>django安装</h3><p>pip install django</p><p>如果电脑上还有别的版本的python解释器，可以用</p><p>py -3 -m pip install django或者</p><p>py -2 -m pip install django来进行安装。</p><h3 id="app应用"><a href="#app应用" class="headerlink" title="app应用"></a>app应用</h3><p>app必须存在于项目中。</p><p>一个项目至少有一个app或者多个app，</p><h3 id="创建django项目"><a href="#创建django项目" class="headerlink" title="创建django项目"></a>创建django项目</h3><p>项目名字可以自己定义，下面的app名字可以填写，也可以通过命令在终端自己创建，个人感觉图形化界面比较方便一些。</p><p><img src="https://i.loli.net/2019/01/16/5c3f1e8bb6d2a.png" alt></p><p>创建成功之后</p><p><img src="https://i.loli.net/2019/01/16/5c3f1f380dd35.png" alt>  </p><p>创建成功之后，里面有2个文件夹，一个是项目文件夹，一个是app文件夹。</p><ul><li>settings文件是设置文件夹</li><li>urls 文件是路由</li><li>前面的请求就相当于正则开始匹配，如果匹配成功返回给处理器，不成功则失败。</li><li><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\1547642679996.png" alt="1547642679996"></li><li>views 视图函数</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Django项目创建流程</title>
      <link href="/2019/02/21/Django%E9%A1%B9%E7%9B%AE%E5%88%9B%E5%BB%BA%E6%B5%81%E7%A8%8B/"/>
      <url>/2019/02/21/Django%E9%A1%B9%E7%9B%AE%E5%88%9B%E5%BB%BA%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>Django项目创建流程</p><p>1.创建项目  django-admin startproject 名字</p><p>2.创建app   python manage.py startapp 名字</p><p>3.生成迁移数据库文件  python manage.py makemigrations</p><p>4.迁移数据库  python manage.py migrate</p>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
