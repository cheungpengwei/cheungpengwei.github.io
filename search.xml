<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[热灌注基础知识]]></title>
    <url>%2F2019%2F06%2F17%2F%E7%83%AD%E7%81%8C%E6%B3%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%2F</url>
    <content type="text"><![CDATA[热灌注基础知识1、体腔热灌注BR-TRG-II型，没有控温系统；控温（±0.3℃），测温（±0.1℃ 测温针）；超微过滤 40μm。 2、双冲过滤 40μm+15μm（耗材 40μm指水袋过滤 15μm指超微过滤） 3、卵巢癌复发率70% 4、生命体征：体温、呼吸、血压、心率。 5、心血管病：心梗、脑梗。 6、常用药物：顺铂、紫杉醇、氟尿嘧啶、吉西他滨。 7、水箱里的水是无菌纯净水。 8、堵管： ①测温管出水的速度； ②蓝色线条的波动； ③水袋页面的变化。 9、调管： ①捏管； ②换管； ③拔管； ④让病人侧身]]></content>
      <categories>
        <category>私密</category>
      </categories>
      <tags>
        <tag>工作</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[体腔热灌注]]></title>
    <url>%2F2019%2F06%2F16%2F%E4%BD%93%E8%85%94%E7%83%AD%E7%81%8C%E6%B3%A8%2F</url>
    <content type="text"><![CDATA[体腔热灌注 1、什么是体腔热灌注？ ​ 将大容量灌注液或是含有化疗药物的灌注液加热到一定温度，并持续循环恒温灌注入患者体腔（胸腔、腹腔、膀胱）内，维持一定时间，通过热化疗的协同增敏作用和机械冲刷杀灭和清除体腔内残留癌细胞及微小病灶的一种新的肿瘤治疗系统。 2、保瑞BR-TRG体腔热灌注治疗系统优势？ ​ 胸腔、治疗病灶、转移灶腹水、预防转移复发、半导体降温、冷热循环水箱、双重过滤40um+50um、防堵管切换阀、双循环热交换 3、HIPEC适用于什么科室 ​ 普外科、胃肠外科、肝胆外科、泌尿外科、妇科、胸外科、肿瘤内科 4、有哪些文献研究有推荐指南纳入HIPEC治疗？ ​ CA、CSCO2018、FIGO、NCCN、阿姆斯特丹声明、新英格兰 ​ 共识：肝门部胆管癌规范化诊治专家共识2015胰腺癌综合诊治。 5、简述HIPEC腹腔适应症？ ​ 治：（肿瘤侵犯浆膜 游离癌细胞阳性） ​ 胃癌、结直肠癌、胆管癌、胰腺癌、卵巢癌、子宫内膜癌、腹腔假性粘液瘤、腹膜恶性间皮瘤、癌性腹水、其他恶性肿瘤膜种植转移的研究性治疗。 ​ 预：进展期胃癌、结直肠癌、卵巢癌根治术后预防腹膜种植转移；进展期胆管癌、胰腺癌根治手术后的研究性治疗。 6、HIPEC胸腔的适应症是？ ​ 治：（肿瘤侵犯胸膜 胸腔脱落癌细胞阳性） ​ 晚期恶性肿瘤伴发的胸腔积液 ​ 胸膜发现有癌性结节 ​ 预：经胸腔入路的恶性肿瘤手术术后预防胸膜种植转移。 7、哪些情况下不推荐应用HIPEC？ ​ 1.各种原因导致胸、腹腔内广泛黏连。 ​ 2.吻合口存在水肿、缺血、张力愈合不良因素。 ​ 3.肠梗阻患者。 ​ 4.有明显肝肾功能不全者。 ​ 5.严重心血管系统病变。 ​ 6.患者生命体征不稳定。 ​ 7.恶病质患者。 8、HIPEC治疗前如何放置管道？ ​ 胸腔：①取七、八肋间腋前、腋中线作为穿刺点； ​ ②穿刺点可选在同一肋间或相邻肋间，相距2-3cm； ​ ③一根胸腔引流管向上，管口位于胸腔上部，长约15-20cm; ​ ④一根胸腔引流管向下，管口位于胸腔下部10cm; ​ ⑤灌注结束，引流管接闭式引流瓶。 ​ 腹腔：①取腋前线上，脐上脐下1-2横指置管； ​ ②上腹向下至同侧盆底（紧贴腹壁）； ​ ③下腹向上至隔下（紧贴侧腹壁）； ​ ④避免引流管置于肠管间； ​ ⑤有较大创面，引流管末端越过创面； ​ ⑥同色为一组，做出水或入水。 9、如何选择的HIPEC治疗时机？建议疗程有哪些？ ​ 时机：3天内开始、术后即刻进行、术后一周内完成 ​ 疗程：间隔时间大于24小时 ​ 预防：1-3次 ​ 治疗：3-5次 10、HIPEC治疗参数有哪几项？数据？ 胸腔 45-48℃ 60min 流速：400-600ml/min 容量：1500-2000ml 腹腔 43℃ 60-90min 流速：400-600ml/min 容量：2000-4000ml 膀胱 45℃ 45min 流速：150ml/min 容量：150-300ml]]></content>
      <categories>
        <category>私密</category>
      </categories>
      <tags>
        <tag>工作</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[推箱子游戏]]></title>
    <url>%2F2019%2F02%2F21%2F%E6%8E%A8%E7%AE%B1%E5%AD%90%E6%B8%B8%E6%88%8F%2F</url>
    <content type="text"><![CDATA[推箱子小游戏用python代码写的一个推箱子小游戏，有喜欢的可以玩一下。 代码如下： # 用二维数组表示地图 # X 代表箱子，o 代表小人 map = [ ​ “**“, ​ “ ** “, ​ “ X** “, ​ “ o “, ​ “** *”, ​ “ ** “, ​ “ “, ​ “* **“, ​ “* “, ​ “**“ ] # 创建变量step，用于存储已走步数 # step = 0 # 记录小人的初始坐标 global currentPersonRow,currentPersonCol currentPersonRow = 3 currentPersonCol = 2 # 显示地图的方法 def showMap(): ​ for m in map: ​ print(m) # 接收用户输入的方向的函数 def enterDirection(): ​ dir = input(‘请输入小人移动的方向 w:上 s:下 a:左 d:右 \n’) ​ return dir # 用于移动小人和箱子 # 这个方法需要改变 def move(dir): ​ # 创建变量记录小人的下一个坐标 ​ nextPersonRow = 0 ​ nextPersonCol = 0 ​ # 获取下一个位置坐标 ​ # 调用getNextPoisiton()函数计算下一个坐标 ​ global currentPersonRow,currentPersonCol ​ # print(‘这’) ​ # print(currentPersonRow,currentPersonCol,nextPersonRow,nextPersonCol) ​ position = getNextPosition(dir,currentPersonRow,currentPersonCol,nextPersonRow,nextPersonCol) ​ print(‘第一次:’,position) ​ # print(position) -&gt; [nextPersonRow,nextPersonCol,currentPersonRow,currentPersonCol] ​ currentPersonRow = position[2] ​ currentPersonCol = position[3] ​ nextPersonRow = position[0] ​ nextPersonCol = position[1] ​ # 判断下一个位置是什么 *是墙壁，X是箱子，空格代表通道 ​ if map[nextPersonRow][nextPersonCol] == ‘ ‘: ​ # 代表下一个位置是通道，可以移动 ​ # map[currentPersonRow][currentPersonCol] = ‘ ‘ ​ # map[nextPersonRow][nextPersonCol] = ‘o’ ​ # 调用改变地图方法 ​ chmap(currentPersonRow,currentPersonCol,map,’ ‘) ​ chmap(nextPersonRow,nextPersonCol,map,’o’) ​ # 改变小人当前位置 ​ currentPersonRow = nextPersonRow ​ currentPersonCol = nextPersonCol ​ # step+=1 #步数+1 ​ elif map[nextPersonRow][nextPersonCol] == ‘X’: ​ # 此时下一个位置是箱子，还需要再次判断下一个位置 ​ nextBoxRow = 0 ​ nextBoxCol = 0 ​ # 调用getNextPosition()计算箱子的下一个位置 ​ position = getNextPosition(dir,nextPersonRow,nextPersonCol,nextBoxRow,nextBoxCol) ​ print(‘第二次:’,position) ​ nextBoxRow = position[0] ​ nextBoxCol = position[1] ​ nextPersonRow = position[2] ​ nextPersonCol = position[3] ​ if map[nextBoxRow][nextBoxCol] == ‘ ‘: ​ # 代表下一个位置是路，可以移动 ​ # map[nextBoxRow][nextBoxCol] = ‘X’ ​ # map[nextPersonRow][nextPersonCol] = ‘o’ ​ # map[currentPersonRow][currentPersonCol] = ‘ ‘ ​ chmap(nextBoxRow,nextBoxCol,map,’X’) ​ chmap(nextPersonRow,nextPersonCol,map,’o’) ​ chmap(currentPersonRow,currentPersonCol,map,’ ‘) ​ ​ # step+=1 #步数+1 ​ # 记录当前小人的位置 ​ currentPersonRow = nextPersonRow ​ currentPersonCol = nextPersonCol ​ # 遇到墙壁的情况不做处理 # 获取下一个位置的方法 # 需要五个参数 # 1.移动的方向 # 2.当前行 # 3.当前列 # 4.下一个行位置 # 5.下一个列位置 def getNextPosition(dir,currentPersonRow,currentPersonCol,nextPersonRow,nextPersonCol): ​ # 创建一个数组，存储行列位置，并返回 ​ position = [] ​ if dir == ‘a’ or dir == ‘A’: ​ # 向左移一个单位 ​ nextPersonRow = currentPersonRow ​ nextPersonCol = currentPersonCol - 1 ​ elif dir == ‘d’ or dir == ‘D’: ​ # 向右移一个单位 ​ nextPersonRow = currentPersonRow ​ nextPersonCol = currentPersonCol + 1 ​ elif dir == ‘w’ or dir == ‘W’: ​ # 向上移一个单位 ​ nextPersonRow = currentPersonRow - 1 ​ nextPersonCol = currentPersonCol ​ elif dir == ‘s’ or dir == ‘S’: ​ # 向下移一个单位 ​ nextPersonRow = currentPersonRow + 1 ​ nextPersonCol = currentPersonCol ​ # else: ​ # print(‘请输入正确的方向’) ​ position.append(nextPersonRow) ​ position.append(nextPersonCol) ​ position.append(currentPersonRow) ​ position.append(currentPersonCol) ​ return position # 改变地图的参数，传入x,y为更改的坐标,map为数组，也就是地图,target是目标图形 def chmap(x,y,map,target): ​ s = map[x] ​ l = list(s) ​ l[y] = target ​ new_s = ‘’.join(l) ​ map[x] = new_s while True: ​ showMap() ​ # 每次都判断是否过关 ​ if map[8][9] == ‘X’: ​ # print(“恭喜您过关了，您一共走了%d步” %step) ​ print(‘You are win!’) ​ break ​ ​ # 调用enterDirection()获取用户输入的方向并复制给dir ​ dir = enterDirection() ​ print(“你输入的方向是：%c \n” %dir) ​ if dir == ‘q’ or dir == ‘Q’: ​ print(‘游戏退出’) ​ break ​ move(dir)]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[日记]]></title>
    <url>%2F2019%2F02%2F21%2F%E6%97%A5%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[日记大V较多快深V偶尔喝IE佛IE和缩放]]></content>
      <categories>
        <category>私密</category>
      </categories>
      <tags>
        <tag>日记</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[pip用法、venv、虚拟环境（Windows环境）]]></title>
    <url>%2F2019%2F02%2F21%2Fpip%E7%94%A8%E6%B3%95%E3%80%81venv%E3%80%81%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%EF%BC%88Windows%E7%8E%AF%E5%A2%83%EF%BC%89%2F</url>
    <content type="text"><![CDATA[pippip:python install package,python三方包管理工具。安装python解释器时已自带。目录已添加到环境变量中。 包管理工具：包是别人写好的代码。经常有这种情况，比如爬虫框架功能的A包，里面引用了负责解析页面的B包，B包引用了更加基础底层的C包。包关系成树状引用。B包依赖C包。直接使用A包，运行报错缺少B包，缺少依赖包。 为了解决依赖包问题，包管理工具出现，主要功能：管理、下载、上传包。解决依赖，安装一个包时会把相关的依赖包都安装好。 pypi: https://pypi.org/ 是查找、安装、发布python包的一个平台。pip工具默认从pypi下载包。 pip命令 在cmd命令窗口1&gt; . 输入python，查看python安装的版本信息;2&gt; . 输入exit（）退出；3&gt; . 输入pip，查看pip的使用以及介绍，界面如图； 在cmd命令窗口， 输入pip list命令，输出安装过的三方包的列表。pip工具本身就是一个包，界面如图； 在cmd命令窗口，输入pip search 关键字命令 ， 搜索包含关键字的包名，界面如图； .在cmd命令窗口，输入pip install 包名命令，用来安装包。安装包的本质是从pypi下载，解压复制到C:\Python36\Lib\site-packages 下。默认安装包的最新版本。界面如图； 在cmd命令窗口，输入pip uninstall 包名命令， 用来 卸载安装包，界面如图； 在cmd命令窗口， 输入pip install requests==2.19.0 ，用来安装指定版本的包，界面如图； 批量备份和安装 在cmd命令窗口， 输入命令 pip freeze &gt; requirement.txt，将解释器中的包和版本导出到一个文件中。界面如图；执行成功以后在解释器中会多出一个名为requirement.txt的文件，界面如图；在此文件夹会出现一些包，这些都是你的计算机安装的一些包。 在cmd命令窗口， 输入命令pip install requirement.txt ，根据requirement.txt的信息批量安装对应版本的包，此命令需要把之前安装过的包卸载一些或者是在一台新的计算机中输入会显示，在此就不演示了，抱歉。 pip安装速度慢的问题因为服务器在国外。为了改善这个问题，国内一些厂商或大学做了pypi网站的镜像。国内的镜像站豆瓣源、网易源、清华源等。 常用国内源：豆瓣：http://pypi.douban.com/simple/清华：https://pypi.tuna.tsinghua.edu.cn/simple 临时使用：输入pip install -i http://pypi.douban.com/simple/pillow永久修改（推荐）：在C:/Users/用户名 下，新建pip文件夹，pip文件夹下新建pip.ini文件，在pip.ini文件写入下面两行代码即可；[global]index-url = https://pypi.douban.com/simple/ 虚拟环境python虚拟解释器环境公司不同时期的多个开发项目，使用的python大版本和各个包的版本不尽相同。每个项目要求有一套让自己成功运行的解释器。一个程序员可能同时开发多个项目。电脑上需要有多套python解释器跟项目一一对应。 我们电脑现在只有一套python解释器，已它基础，虚拟出几个解释器的备份。老的教材中要先安装virtualenv (虚拟environment环境)，因为使用较多，所以py3.4起官方直接内置了venv包。 在cmd命令窗口， 输入命令python -m venv 虚拟环境名 ，创建虚拟环境，界面如图；创建完发现虚拟环境具备python.exe ， pip.exe ， active.bat,Lib库中除了pip包是空的，就好像刚重装完电脑系统。 在cmd命令窗口， 输入命令cd 虚拟环境名/Scripts，进入名为Scripts的文件夹 在cmd命令窗口， 输入命令activate.bat ，激活虚拟环境激活之后，界面如图； 激活虚拟环境后可以pip install跟项目配合的包，python app.py。如果有多个项目，就生成多个虚拟环境一一搭配。好处，实现了项目环境隔离。 还有不足之处，请多指教，欢迎在下方留言评论，谢谢！]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Django框架]]></title>
    <url>%2F2019%2F02%2F21%2FDjango%E6%A1%86%E6%9E%B6%2F</url>
    <content type="text"><![CDATA[python开发web项目djangodjango安装pip install django 如果电脑上还有别的版本的python解释器，可以用 py -3 -m pip install django或者 py -2 -m pip install django来进行安装。 app应用app必须存在于项目中。 一个项目至少有一个app或者多个app， 创建django项目项目名字可以自己定义，下面的app名字可以填写，也可以通过命令在终端自己创建，个人感觉图形化界面比较方便一些。 创建成功之后 创建成功之后，里面有2个文件夹，一个是项目文件夹，一个是app文件夹。 settings文件是设置文件夹 urls 文件是路由 前面的请求就相当于正则开始匹配，如果匹配成功返回给处理器，不成功则失败。 views 视图函数]]></content>
  </entry>
  <entry>
    <title><![CDATA[Django项目创建流程]]></title>
    <url>%2F2019%2F02%2F21%2FDjango%E9%A1%B9%E7%9B%AE%E5%88%9B%E5%BB%BA%E6%B5%81%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[Django项目创建流程 1.创建项目 django-admin startproject 名字 2.创建app python manage.py startapp 名字 3.生成迁移数据库文件 python manage.py makemigrations 4.迁移数据库 python manage.py migrate]]></content>
      <categories>
        <category>Django</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
</search>
